name: Check code for vulnerabilities and build andpush docker image

on:
  push:
    branches: main
  workflow_dispatch:
  
jobs:
  SnykTest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Run Snyk to check for vulnerabilities
        working-directory: ${{github.workspace}}/src
        run: |
          pip install -r requirements.txt
          npm install -g snyk
          snyk auth ${{secrets.SNYK_TOKEN}}
          snyk test
          
  SonarCloudTest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  CheckCodeAndStyle:
    runs-on: ubuntu-latest
    container: python:3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install flake8
        run: python3 -m pip install flake8

      - name: Check style
        run: flake8 src

  EditorConfigCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install editorconfig-checker
        run: pip install editorconfig-checker
        
      - name: Start checking
        run: ec
        
  MarkdownFilesCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install mardownlint
        run: npm install -g markdownlint-cli

      - name: Run markdownlint test
        run: markdownlint .

  UnitTests:
    runs-on: ubuntu-latest
    container: python:3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install dependencies
        run: pip install -r src/requirements.txt
        
      - name: Run unit tests
        run: python3 -m unittest test/app_test.py

  HardcodedSecretsCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for hardcoded secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

  CheckForDatabaseMigrations:
    runs-on: ubuntu-latest
    services:
      mySQL:
        image: mysql
        env:
          MYSQL_DB: ${{secrets.MYSQL_DB}}
          MYSQL_USER: ${{secrets.MYSQL_USER}}
          MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: dbc:mysql://172.17.0.2:3306/example
          user: MYSQL_USER
          password: MYSQL_PASSWORD
      - run: echo 'testing

  BuildAndPushImage:
    runs-on: ubuntu-latest
    needs: ["SnykTest", "SonarCloudTest", "CheckCodeAndStyle", "EditorConfigCheck", "MarkdownFilesCheck", "UnitTests", "HardcodedSecretsCheck"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build an image
        run: docker build -t "python_app:1.0" .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'python_app:1.0'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'
          
      - name: Tag an image
        run: docker tag python_app:1.0 nikolaykostandiev/modern_devops_practices:1.0

      - name: Push an image to DockerHub
        run: docker push nikolaykostandiev/modern_devops_practices:1.0
    
